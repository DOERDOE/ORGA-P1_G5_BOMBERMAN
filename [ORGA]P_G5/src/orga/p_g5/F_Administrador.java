/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orga.p_g5;

import Estructuras.*;
import java.awt.List;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.function.Function;
import java.util.function.ToDoubleFunction;
import java.util.function.ToIntFunction;
import java.util.function.ToLongFunction;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import sun.nio.cs.HistoricallyNamedCharset;

/**
 *
 * @author Aragon Perez
 */
public class F_Administrador extends javax.swing.JFrame {
    public String [][]Usu_P;
    public ArrayList<Lista_Usuario> Usuarios;
    //Array top 10 Tiempos
    public ArrayList<Lista_Tops> Tops;
    /**
     * Creates new form F_Administrador
     */
    public F_Administrador() {
        initComponents();
    }
    public void Actualizar_P(int seleccion,String cadena){
        

        int i=0;
        String Datos[]= new String[16];
        while(i<15){
            if(Usu_P[i][0]!=null){
                if(Usu_P[i][0].equals(cadena)){
                    if(seleccion==1){
                        //Agregar Usuario
                        Lista_Usuario nuevo=new Lista_Usuario();
                        nuevo.setUsuario(Usu_P[i][0]);
                        nuevo.setPass(Usu_P[i][1]);
                        
                        //comprobacion si existe
                        int error=0;
                        for (int x = 0; x < Usuarios.size(); x++) {
                            Lista_Usuario Usu = Usuarios.get(x);
                            if(cadena.equals(Usu.getUsuario())){
                                error=1;
                            }
                        }
                        if(error==1){
                            JOptionPane.showMessageDialog(null, "--Se Elimino Peticion de Usuario ya Existente--","REGISTRO", JOptionPane.WARNING_MESSAGE);
                        }else{
                            Usuarios.add(nuevo);
                            JOptionPane.showMessageDialog(null, "El usuario a sido aceptado");
                        }

                    }
                    Usu_P[i][0]=null;
                    Usu_P[i][1]=null;
                    jList1.setListData(new String[0]);
                }
                Datos[i]=Usu_P[i][0];
            }
            i++;
        }
        jList1.setListData(Datos);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jButton1.setText("Cerrar Sesion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jButton3.setText("Limpiar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton4.setText("Aceptar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Eliminar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton2.setText("Solicitudes Pendientes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5))
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton6.setText("Ver Usuarios");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Eliminar Usuario");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButton8.setText("TOP 10 Tiempos");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("TOP 10 Punteos");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addContainerGap())
        );

        jLabel1.setText("ADMINISTRADOR");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel1)))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton3))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        F_Login F_Login= new F_Login();
        F_Login.show();
        this.dispose();
        F_Login.setLocationRelativeTo(null);
        F_Login.Usu_P=this.Usu_P;
        F_Login.Usuarios=this.Usuarios;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //MUESTRA LISTA DE SOLICITUDES
        int i=0;
        String Datos[]= new String[17];
        while(i<15){
            if(Usu_P[i][0]!=null){
                //System.out.println(Usu_P[i][0]);
                Datos[i]=Usu_P[i][0];
            }
            i++;
        }
        
        jList1.setListData(Datos);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jList1.setListData(new String[0]);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String Nombre_Usu=jList1.getSelectedValue();
        Actualizar_P(1, Nombre_Usu);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String Usuario=jList1.getSelectedValue();
        Actualizar_P(0, Usuario);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
       //MUESTRA LISTA DE USUARIOS
        jList1.setListData(new String[0]);
        
        String Datos[]= new String[100];
        for (int x = 0; x < Usuarios.size(); x++) {
            Lista_Usuario Usu = Usuarios.get(x);
            Datos[x]=Usu.getUsuario();
        }
        jList1.setListData(Datos);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String Nombre_Usu=jList1.getSelectedValue();
        jList1.setListData(new String[0]);
        //BUSCA Y ELIMINAR
        String Datos[]= new String[100];
        for (int x = 0; x < Usuarios.size(); x++) {
            Lista_Usuario Usu = Usuarios.get(x);
            if(Usu.getUsuario().equals(Nombre_Usu)){
                Usuarios.remove(x);
            }
        }
        //PARA ACTUALIZAR LISTA
        for (int x = 0; x < Usuarios.size(); x++) {
            Lista_Usuario Usu = Usuarios.get(x);
            Datos[x]=Usu.getUsuario();
        }
        jList1.setListData(Datos);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // Muestra formulario de Top Tiempos
        F_Top_Tiempos F_top= new F_Top_Tiempos();
        F_top.setLocationRelativeTo(null);
        F_top.Usu_P=this.Usu_P;
        F_top.Usuarios=this.Usuarios;
        
        
        Tops=new ArrayList<>();
        //TEMPORAL
//        generacion de tabla
//        Lista_Tops tem=new Lista_Tops();
//        tem.Usuario="Intento1";
//        tem.Tiempos=1;
//        Lista_Tops tem1=new Lista_Tops();
//        tem1.Usuario="Intento2";
//        tem1.Tiempos=2;
//        Lista_Tops tem2=new Lista_Tops();
//        tem2.Usuario="Intento3";
//        tem2.Tiempos=3;
//                Lista_Tops tem3=new Lista_Tops();
//        tem3.Usuario="Intento3";
//        tem3.Tiempos=7;
//        Lista_Tops tem4=new Lista_Tops();
//        tem4.Usuario="Intento4";
//        tem4.Tiempos=10;
//        Lista_Tops tem5=new Lista_Tops();
//        tem5.Usuario="Intento5";
//        tem5.Tiempos=1;
//                Lista_Tops tem6=new Lista_Tops();
//        tem.Usuario="Intento6";
//        tem.Tiempos=11;
//        Lista_Tops tem7=new Lista_Tops();
//        tem7.Usuario="Intento7";
//        tem7.Tiempos=2;
//        Lista_Tops tem8=new Lista_Tops();
//        tem8.Usuario="Intento8";
//        tem8.Tiempos=12;
//                Lista_Tops tem9=new Lista_Tops();
//        tem9.Usuario="Intento9";
//        tem9.Tiempos=1;
//        Lista_Tops tem10=new Lista_Tops();
//        tem10.Usuario="Intento10";
//        tem10.Tiempos=13;
//        Lista_Tops tem11=new Lista_Tops();
//        tem11.Usuario="Intento11";
//        tem11.Tiempos=3;
//        Tops.add(tem);
//        Tops.add(tem1);
//        Tops.add(tem2);
//        Tops.add(tem3);
//        Tops.add(tem4);
//        Tops.add(tem5);
//        Tops.add(tem6);
//        Tops.add(tem7);
//        Tops.add(tem8);
//        Tops.add(tem9);
//        Tops.add(tem10);
//        Tops.add(tem11);

        for (int x = 0; x < Usuarios.size(); x++) {
            Lista_Usuario Usu = Usuarios.get(x);

            String T_Tiempo[]=Usu.ObtenerTiempos();
            String T_Punteo[]=Usu.ObtenerPuntos();
            //agreamos los tiempos y punteos
            int y=0;
            while(true){
                if(T_Tiempo[y]!=null){
                    Lista_Tops nuevo=new Lista_Tops();
                    Tops=new ArrayList<>();
                    nuevo.Usuario=Usu.getUsuario();
                    nuevo.Contraseña=Usu.getPass();
                    nuevo.Tiempos=Integer.valueOf(T_Tiempo[y]);
                    nuevo.Puntucacion=Integer.valueOf(T_Punteo[y]);
                    Tops.add(nuevo);
                }
                else{
                    break;
                }
                y++;
            }
            
        }
        //ordena loss valores
        Collections.sort(Tops, new Comparator<Lista_Tops>() {
            @Override
            public int compare(Lista_Tops p1, Lista_Tops p2) {
               if( p1.Tiempos > p2.Tiempos ){
                   return -1;
               }
               if( p1.Tiempos < p2.Tiempos ){
                   return 1;
               }
               return 0;
            }
        });
        //TEMPORAL IMPRIMIR ORDENADO
        String CadenaImprimir="                 TOP 10 TIEMPOS"+'\n';
        CadenaImprimir+="           USUARIO \t\t\t NIVEL \t\t\t TIEMPO "+'\n';
        DefaultTableModel modelo = (DefaultTableModel) F_top.jTable1.getModel();
        for (int x = 0; x < Tops.size(); x++) {
            Lista_Tops tp = Tops.get(x);
            //System.out.println("Nombre: "+tp.Usuario+"  Tiempo:"+tp.Tiempos);
            if(x<10){
                Object [] fila=new Object[6];

                fila[0]=String.valueOf(x+1);
                fila[1]=tp.Usuario;
                fila[2]=tp.Contraseña;
                fila[3]=tp.Tiempos;
                fila[4]=1;
                //agregar a Reporte
                CadenaImprimir+="            "+tp.Usuario+" \t\t     1    \t\t\t "+tp.Tiempos+'\n';
                //Agregar a Tabla
                modelo.addRow(fila);
            }
        }
        F_top.jTable1.setModel(modelo);
        //Generacion de reporte .rep
        String ruta = "Tiempo.rep";
        File archivo = new File(ruta);
        BufferedWriter Lect;
        try {
            Lect = new BufferedWriter(new FileWriter(archivo));
            Lect.write(CadenaImprimir);
            Lect.close();
        } catch (IOException ex) {
            Logger.getLogger(F_Administrador.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        F_top.show();
        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        F_Top_Puntos F_top= new F_Top_Puntos();
        F_top.setLocationRelativeTo(null);
        F_top.Usu_P=this.Usu_P;
        F_top.Usuarios=this.Usuarios;
        
        
        Tops=new ArrayList<>();
        for (int x = 0; x < Usuarios.size(); x++) {
            Lista_Usuario Usu = Usuarios.get(x);

            String T_Tiempo[]=Usu.ObtenerTiempos();
            String T_Punteo[]=Usu.ObtenerPuntos();
            //agreamos los tiempos y punteos
            int y=0;
            while(true){
                if(T_Punteo[y]!=null){
                    Lista_Tops nuevo=new Lista_Tops();
                    Tops=new ArrayList<>();
                    nuevo.Usuario=Usu.getUsuario();
                    nuevo.Contraseña=Usu.getPass();
                    nuevo.Tiempos=Integer.valueOf(T_Tiempo[y]);
                    nuevo.Puntucacion=Integer.valueOf(T_Punteo[y]);
                    Tops.add(nuevo);
                }
                else{
                    break;
                }
                y++;
            }
            
        }
        //ordena loss valores
        Collections.sort(Tops, new Comparator<Lista_Tops>() {
            @Override
            public int compare(Lista_Tops p1, Lista_Tops p2) {
               if( p1.Puntucacion > p2.Puntucacion ){
                   return -1;
               }
               if( p1.Puntucacion < p2.Puntucacion ){
                   return 1;
               }
               return 0;
            }
        });
        //TEMPORAL IMPRIMIR ORDENADO
        String CadenaImprimir="                 TOP 10 PUNTOS"+'\n';
        CadenaImprimir+="           USUARIO \t\t\t NIVEL \t\t\t PUNTOS "+'\n';
        DefaultTableModel modelo = (DefaultTableModel) F_top.jTable1.getModel();
        for (int x = 0; x < Tops.size(); x++) {
            Lista_Tops tp = Tops.get(x);
            //System.out.println("Nombre: "+tp.Usuario+"  Tiempo:"+tp.Tiempos);
            if(x<10){
                Object [] fila=new Object[6];

                fila[0]=String.valueOf(x+1);
                fila[1]=tp.Usuario;
                fila[2]=tp.Contraseña;
                fila[3]=tp.Puntucacion;
                fila[4]=1;
                //agrega a reporte
                CadenaImprimir+="            "+tp.Usuario+" \t\t     1    \t\t\t "+tp.Puntucacion+'\n';
                //agrega a tabla
                modelo.addRow(fila);
            }
        }
        
        String ruta = "Puntos.rep";
        File archivo = new File(ruta);
        BufferedWriter Lect;
        try {
            Lect = new BufferedWriter(new FileWriter(archivo));
            Lect.write(CadenaImprimir);
            Lect.close();
        } catch (IOException ex) {
            Logger.getLogger(F_Administrador.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        F_top.jTable1.setModel(modelo);
        F_top.show();
        this.dispose();
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F_Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F_Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F_Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F_Administrador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F_Administrador().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
